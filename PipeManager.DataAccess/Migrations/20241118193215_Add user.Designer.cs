// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PipeManager.DataAccess;

#nullable disable

namespace PipeManager.DataAccess.Migrations
{
    [DbContext(typeof(PipeManagerDbContext))]
    [Migration("20241118193215_Add user")]
    partial class Adduser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PipeManager.DataAccess.Entites.PackageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.PipeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Diameter")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("IsGood")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Length")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SteelGradeId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Weight")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("SteelGradeId");

                    b.ToTable("Pipes");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.SteelGradeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("SteelGrades");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.PipeEntity", b =>
                {
                    b.HasOne("PipeManager.DataAccess.Entites.PackageEntity", "Package")
                        .WithMany("Pipes")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PipeManager.DataAccess.Entites.SteelGradeEntity", "SteelGrade")
                        .WithMany("Pipes")
                        .HasForeignKey("SteelGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("SteelGrade");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.PackageEntity", b =>
                {
                    b.Navigation("Pipes");
                });

            modelBuilder.Entity("PipeManager.DataAccess.Entites.SteelGradeEntity", b =>
                {
                    b.Navigation("Pipes");
                });
#pragma warning restore 612, 618
        }
    }
}
